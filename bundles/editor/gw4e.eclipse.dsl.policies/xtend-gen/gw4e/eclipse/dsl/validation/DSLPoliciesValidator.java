/**
 * generated by Xtext 2.12.0
 */
package gw4e.eclipse.dsl.validation;

import gw4e.eclipse.dsl.dSLPolicies.DSLPoliciesPackage;
import gw4e.eclipse.dsl.dSLPolicies.GraphElement;
import gw4e.eclipse.dsl.dSLPolicies.StopCondition;
import gw4e.eclipse.dsl.validation.AbstractDSLPoliciesValidator;
import gw4e.eclipse.dsl.validation.EditorHelper;
import java.io.File;
import org.eclipse.xtext.validation.Check;
import org.eclipse.xtext.validation.ValidationMessageAcceptor;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.gw4e.eclipse.facade.GraphWalkerFacade;

/**
 * This class contains custom validation rules.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
@SuppressWarnings("all")
public class DSLPoliciesValidator extends AbstractDSLPoliciesValidator {
  public final static String INVALID_PERCENTAGE = "Invalid percentage";
  
  public final static String INVALID_VERTEX = "Invalid vertex";
  
  public final static String INVALID_EDGE = "Invalid edge";
  
  @Check
  public void checkStopCondition(final StopCondition condition) {
    try {
      String modelFile = EditorHelper.getModelFileName(condition);
      GraphElement gelt = condition.getGraphelement();
      if ((gelt != null)) {
        final String ge = gelt.getName();
        boolean _equals = "reached_vertex".equals(condition.getPathtype());
        if (_equals) {
          File folder = EditorHelper.getEditedFileFolder();
          if ((folder == null)) {
            return;
          }
          File f = new File(folder, modelFile);
          boolean valid = GraphWalkerFacade.isValidVertex(f, ge);
          if ((!valid)) {
            this.error(DSLPoliciesValidator.INVALID_VERTEX, gelt, DSLPoliciesPackage.Literals.GRAPH_ELEMENT__NAME, 
              ValidationMessageAcceptor.INSIGNIFICANT_INDEX, null, null);
          }
        }
        boolean _equals_1 = "reached_edge".equals(condition.getPathtype());
        if (_equals_1) {
          File folder_1 = EditorHelper.getEditedFileFolder();
          if ((folder_1 == null)) {
            return;
          }
          File f_1 = new File(folder_1, modelFile);
          boolean valid_1 = GraphWalkerFacade.isValidEdge(f_1, ge);
          if ((!valid_1)) {
            this.error(DSLPoliciesValidator.INVALID_EDGE, gelt, DSLPoliciesPackage.Literals.GRAPH_ELEMENT__NAME, 
              ValidationMessageAcceptor.INSIGNIFICANT_INDEX, null, null);
          }
        }
      } else {
        final String percentage = condition.getPercentage();
        if ((percentage != null)) {
          int value = Integer.parseInt(percentage);
          if (((value <= 0) || (value > 100))) {
            this.error(DSLPoliciesValidator.INVALID_PERCENTAGE, DSLPoliciesPackage.Literals.STOP_CONDITION__PERCENTAGE);
          }
        }
      }
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
