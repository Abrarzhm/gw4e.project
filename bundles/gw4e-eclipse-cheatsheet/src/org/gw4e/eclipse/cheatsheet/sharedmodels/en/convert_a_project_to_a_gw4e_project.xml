<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  gw4e
  $Id:$
  $HeadURL:$
  %%
  Copyright (C) 2017 gw4e-project
  %%
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  #L%
  -->

<cheatsheet
      title="Importing and Integrating the GraphWalker java-petclinic project within the Eclipse IDE">
   <intro>
      <description>
         <b>Let&apos;s do it</b>
      </description>
   </intro>
   <item
         title="Download and Import the the java-petclinic example project">
      <description>
         Install <b>Maven</b> (https://maven.apache.org/install.html)<br/>
         Execute <b>git clone https://github.com/GraphWalker/graphwalker-example.git</b> shell command<br/>        
         Execute <b>cd graphwalker-example/java-petclinic</b> shell command<br/>
         Execute <b>mvn graphwalker:generate-test-sources</b> shell command<br/>
      	 Execute <b>mvn eclipse:eclipse</b> to create an eclipse project<br/><br/>
      	 
      	 At this point many things happened.	<br/>
      	 <b>1</b> : The java-petclinic project has been installed<br/>
      	 <b>2</b> : The GraphWalker interfaces have been generated from all <b>graphml</b> files<br/>
      	 For instances : <br/>
      	 FindOwnersSharedState.java,<br/>
      	 NewOwnerSharedState.java,<br/>
      	 OwnerInformationSharedState.java,<br/> 
      	 PetClinicSharedState.java,<br/> 
      	 VeterinariensSharedState.java<br/>
      	 <b>3</b> : The java-petclinic project is now an Eclipse one. You can now edit this project with the Eclipse IDE.<br/>
      	
      	 Switch back to Eclipse IDE<br/>
      	 Close any opened project<br/>
      	 In the menu, select <b>File -&gt; Import...</b> -&gt; <b>General</b> <b>Existing Projects Into Workspace</b><br/>
 	 	 Select &lt;YOUR_DIRECTORY&gt;/graphwalker-example-master/java-petclinic<br/>
      	 Click <b>Finish</b>, the java-amazon project is imported and can now be edited within Eclipse. <br/>
      </description>
   </item>
    <item
         title="Converting the project">
      <description>
         Now, let's convert the java project into a GW4E one. <br/>
      	 Right-Click the project and select the <b>Configure</b> -&gt; <b>Convert To GW4E</b>. The project is now converted.<br/>
      	 <br/><br/>
      	 At this point many things happened.	<br/>
 	     <b>1</b> : The <b>*.graphml</b> file has been duplicated with an equivalent <b>*.json</b> file.<br/>		
 	     <b>2</b> : The <b>*.java</b> interface file relies now on the <b>*.json</b> file rather than the <b>*.graphml</b> file. Don't worry the files are equivalent. 
 	     Instead of editing the <b>.graphml</b> file with yEd, you can now edit the <b>.json</b> file with the <b>GW4E Eclipse Plugin Editor.</b> <br/>	
 	     <b>3</b> : Edit the <b>build.policies</b> file, you can see that : <br/>
 	     <b>3.1</b> :The <b>*.graphml</b> file is not taken into account when building the project. <br/>
 	     <b>3.2</b> :The <b>*.json</b> is configured to be automatically updated when you will save your <b>*Test.java</b>test.<br/>
 	     <b>4</b> : The <b>*.java</b> test implementation files have been updated with a @Generated annotation.<br/> 
      
         <b>GW4E Plugin constraints when converting a project</b><br/>
      	 This project does not comply with the expected plugin patterns (Files Location and Naming). The tests implementations are not located in the same package as the graph models.<br/>
      	 That is, having the tests implementation located in the <b>com.mycompany</b> package rather than in the <b>com.company.modelimplementations</b> package.<br/>
      	 It does not neither comply with the suffix pattern where we add a suffix configured for the project (default value : 'Impl') to the test implementation name. That is, rather naming PetClinic.java we could have had PetClinicImpl.java.<br/>
      	 To benefit of all plugin features it is better to comply with these patterns. Not using them, might not lead to a good usage experience. If you have existing project, try to match these patterns :-). New project created from scratch with the plugin complies.<br/>
      	 <br/>
      	 Luckily, for the purpose of this tutorials this does not matter.<br/>     	 
       </description>
   </item> 
    
</cheatsheet>
