<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  gw4e
  $Id:$
  $HeadURL:$
  %%
  Copyright (C) 2017 gw4e-project
  %%
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  #L%
  -->

<cheatsheet title="Generating/Running/Debugging GraphWalker java tests">
   <intro>
      <description>
          You may launch your GraphWalker tests programs from the Eclipse workbench.  The programs may be launched in either run or debug mode.<br/>
    		In run mode, the program executes, but the execution may not be suspended or examined.<br/>
    		In debug mode, execution may be suspended and resumed, variables may be inspected, and expressions may be evaluated.<br/>
      </description>
   </intro>
   
   
   <item title="Running the tests" >
      <description>
      In this steps you run the generated tests. There are two kind of launches:<br/>
      <b>GW4E launch</b> : Here the GraphWalker annotation of the class is used to launch a test<br/>
      <b>JUnit launch</b> : Here JUnit methods of the class are executed
      <br/><br/>
    </description>
   </item>
  <item title="Running with GW4E Test Launcher" >
      <description>
      In the Package Explorer, right-click  <b>SimpleImpl.java</b> and select <b>Run As</b> -&gt; <b>GW4E Test</b>.	 
  	  You can examine the results of the execution in the Console View. Notice that the method prints are executed and the performance reports too.
	  <br/><br/>
	  When you ran the test, a default run configuration has been created, before running the test. To view it:<br/>
	  Click <b>Run</b> -&gt;  <b>Run Configurations...</b><br/>
	  On the left pane, select <b>SimpleImpl.java</b> under <b>GW4E Test Launcher</b><br/>
	  On the right pane, you can see the selected project, the class to test. We will see how to use Additional Execution Context in another tutorial.
	  You can now use directly this Run Configuration, whenever needed.<br/>
	  </description>
   </item> 
   <item title="Debugging with GW4E Test Launcher" >
      <description>
      Open <b>SimpleImpl.java</b>  in a java editor, and set a break point in the <b>e_startApp()</b> method.<br/>
      In the Package Explorer, right-click  <b>SimpleImpl.java</b> and select <b>Debug As</b> -&gt; <b>GW4E Test</b>.<br/>
	  The Eclipse Debugger runs and you can now debug your GraphWalker tests as any other java class.<br/>     	 
  	  Click <b>Yes</b> , if the <b>Confirm Perspective Switch</b> dialog opens<br/>
  	  The test execution is suspended and , you can now step in through your code, and examine the contents of variables.<br/>
  	  Click the <b>Resume</b> icon so that your test resumes.<br/>
  	  You can examine the results of the execution in the Console View. 
	  </description>
   </item>   
   <item title="Running with JUnit Test Launcher" >
      <description>
      In the Package Explorer, right-click  <b>SimpleImpl.java</b> and select Run As -> JUnit Test.	 <br/>
      Notice that there is a lengthy test <b>runStabilityTest()</b> that takes 30 sec. Be patient !<br/>
  	  You can examine the results of the execution in the Console View. Notice that the method prints are executed and the performance reports too.
	  <br/><br/>
	  When you ran the test, a default run configuration has been created, before running the test. To view it:<br/>
	  Click Run -> Run Configurations...<br/>
	  On the left pane, select <b>SimpleImpl.java</b> under <b>JUnit</b><br/>
	  On the right pane, you can see the selected project, the class to test. You can now use directly this Run Configuration, whenever needed.<br/>
	  </description>
   </item>    
</cheatsheet>
