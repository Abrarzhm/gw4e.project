<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  gw4e
  $Id:$
  $HeadURL:$
  %%
  Copyright (C) 2017 gw4e-project
  %%
  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:
  
  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.
  
  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  THE SOFTWARE.
  #L%
  -->

<cheatsheet
      title="Extending graoh model and Synchronizing the test accordingly">
   <intro>
      <description>
         Let's do it !
      </description>
   </intro>  
   <item
         title="Extending an existing graph">
      <description>
          Say that, after having discussed with your test manager, you decided to extend the existing graph by adding a new vertex and edges. At some point, you will update the associated GraphWalker test to add
          the methods corresponding to the new graph nodes. Once done and as you know that your existing test works perfectly, you want first to narrow your testing on the new path composed by the added nodes.
          This is where fixed guided path test helps. Let's do that now...<br/>
           
          1 - In the Package Explorer, right-click the Simple.jon file<br/>
          2 - Select <b>Open with</b> -&gt; <b>GW4E Editor</b>.The graph is now opened in its editor. <br/>
          3 - In the <b>Palette</b>, select <b>Vertex</b> and click the editor so that a new vertex is added to the graph.<br/>
          A default name is set to this newly created Vertex.<br/>
          4 - Click this name, so that an editor opens and enter <b>v_MyNewVertex</b><br/>
          5 - In the <b>Palette</b>, select <b>Edge</b>, then select <b>v_VerifyAppRunning</b> and then <b>v_MyNewVertex</b><br/>
          You have now a new edge starting from <b>v_VerifyAppRunning</b> and going to <b>v_MyNewVertex</b>. <br/>
          A default name is set to this newly created Edge<br/>
          6 - Click this name, so that an editor opens and enter <b>e_1</b><br/>
          7 - In the <b>Palette</b>, select <b>Edge</b>, then select <b>v_MyNewVertex</b> and then <b>v_VerifyPreferencePage</b><br/>
          You have now a new edge starting from <b>v_MyNewVertex</b> and going to <b>v_VerifyPreferencePage</b><br/>
          A default name is set to this newly created Edge<br/>
          8 - Click this name, so that an editor opens and enter <b>e_2</b><br/>
          9 - Save your work, and in the main toolbar, click <b>Project</b> -&gt; <b>Clean</b> ... <br/>
         10 - An error is now displayed in the problem view indicating that there is a difference between the graph and the associated test. <br/>
          We will fix that in the next steps.
      </description>
   </item>
   <item
         title="Synchronizing your test with the newly updated model ">
      <description>
          You have extended you graph model and as expected the associated test is no longer synchronized with it. By synchronized, we mean, for each graph elements in the model have a corresponding method in your test.<br/>
          Let's fix that now.<br/>
          1 - In the <b>Package Explorer</b>, right-click the <b>src/main/resources/Simple.json</b> file and select GW4E -&gt; <b>Generate Test Interface</b>. Doing so, regenerate the test interface from the graph model. <br/>
          2 - Errors are now displayed in the problem view indicating that your test does not implement the test interface anymore. <br/>
          3 - Right-click one of the <b>"The type impleImpl must implement the inherited abstract method ..." error.</b><br/>
          4 - Select <b>Quick Fix</b>.<br/>
          5 - Click the <b>Select All</b> button<br/> and make sure the <b>Add unimplemented methods</b> is selected.<br/>
          6 - Click the <b>Finish</b> button<br/> 
          7 - Your test is now in synch' with the graph model. <br/> 
          8 - Open a <b>SimplImpl.java</b> file in an editor, if not already done.<br/> 
          9 - Add <b>System.out.println(Executing:"PUT_HERE_THE_METHOD_NAME");</b>, in each new method.<br/>
         10 - Save your work. Your test is ready to run. <br/>
         <br/>
         So far, you have updated a graph model, and have updated the test accordingly. You now, want to focus your test on a specific path : <br/>
         <b>Start</b> -&gt; <b>e_StartApp</b> -&gt; <b>v_VerifyAppRunning</b> -&gt; <b>e_1</b> -&gt; <b>v_MyNewVertex</b> -&gt; <b>e_2</b> -&gt; <b>v_VerifyPreferencePage</b><br/>
      </description>
   </item>

</cheatsheet>
